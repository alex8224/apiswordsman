name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  GO111MODULE: on
  GOOS: darwin
  CGO_ENABLED: 1
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23
      - name: output os version
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            sw_vers
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            ver
          fi
      - name: Build for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            echo "===build amd64 release"
            go build -o dist/apixia-macos-amd64
            unset GOARCH
            echo "===build arm64 release"
            go build -o dist/apixia-macos-arm64
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            echo "===build windows amd64 release"
            go build -ldflags -H=windowsgui -o dist/apixia-windows-amd64.exe
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: myapp-${{ matrix.os }}
          path: |
            myapp-macos
      - name: Test amd64 binary startup
        run: |
          # 启动程序并在后台运行
          ./dist/apixia-macos-amd64 &
          # 存储进程 ID
          PID=$!
          # 等待一小段时间
          sleep 5
          # 检查进程是否仍在运行
          if ps -p $PID > /dev/null; then
            echo "Program started successfully and is still running"
            kill $PID
            exit 0
          else
            echo "Program crashed or exited prematurely"
            exit 1
          fi
      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add dist/
          git commit -m "Add built artifact for ${{ matrix.os }}"
          git push
